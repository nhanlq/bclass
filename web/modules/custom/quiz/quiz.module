<?php

/**
 * Implements hook_theme().
 */
use \Drupal\Core\Form\FormStateInterface;
function quiz_theme($existing, $type, $theme, $path): array {
  return [
    'quiz' => [
      'variables' => [
        'nodes' => NULL,
        'cache' => [
          'max-age' => 1,
        ],
      ],
    ],
    'b1_practice_test' => [
      'variables' => [
        'terms' => NULL,
        'cache' => [
          'max-age' => 0,
        ],
      ],
    ],
    'b1_practice_test_result' => [
      'variables' => [
        'node' => NULL,
        'quiz' => NULL,
        'collection' => NULL,
        'results' => NULL,
        'sections' => NULL,
        'score' => NULL,
        'origin_user' =>NULL,
        'result' => NULL,
        'cache' => [
          'max-age' => 0,
        ],
      ],
    ],
    'question_number' => [
      'variables' => [
        'questions' => NULL,
        'type' => NULL,
        'cache' => [
          'max-age' => 0,
        ],
      ],
    ],
    'audio_record' => [
      'variables' => [
        'uid' => NULL,
        'quiz_id' => NULL,
        'time' =>  NULL,
        'class' => NULL,
        'body' => NULL,
        'cache' => [
          'max-age' => 0,
        ],
      ],
    ],
  ];
}

/**
 * Implement hook_form_alter().
 * @param $form
 * @param FormStateInterface $form_state
 * @param $form_id
 * @return void
 */
function quiz_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if($form_id == 'node_quiz_form'){
    if(isset($_GET['collection'])){
       $form['collection']['widget']["#default_value"] = $_GET['collection'];
    }
  }

  if($form_id == 'node_section_form'){
    if(isset($_GET['quiz'])){
      $form['quiz']['widget']["#default_value"] = $_GET['quiz'];
    }
  }
}

/**
 * Implement hook_preprocess_node().
 * @param $variables
 * @return void
 */
function quiz_preprocess_node(&$variables){
  if ($variables['node']->bundle() == 'collection'){
    $current_user = \Drupal::currentUser();
    $node = $variables['node'];
    if ($node->get('student')->value == 1) {
      if (in_array('student', $current_user->getRoles()) ||
      in_array('editor', $current_user->getRoles()) ||
      in_array('teacher', $current_user->getRoles()) ||
      in_array('administrator', $current_user->getRoles())) {

      }else{
        throw new \Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException();
      }

    }
  }

}


